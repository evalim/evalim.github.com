---
layout: post
title: "用贝塞尔曲线绘制圆形"
date: 2013-08-11 10:49
comments: true
categories: 图形学 翻译
---

原文：[Drawing a circle with Bezier Curves](http://www.whizkidtech.redprince.net/bezier/circle/)  
作者：G. Adam Stanislav  
翻译：[GZShi](http://weibo.com/sgzwbo)  
时间：2013/8/8 22:33

### 引言  
如果你一直坚定不移地认为[贝塞尔曲线](http://zh.wikipedia.org/wiki/%E8%B2%9D%E8%8C%B2%E6%9B%B2%E7%B7%9A)不可能完美地绘制圆形，嗯……你的观点是对的。  
幸运的是，人的眼睛能够辨别的“完美圆形”并不一定需要真的很完美才行。  
所以，虽然使用贝塞尔曲线不能完美地绘制一个圆形，但拟合的结果却可以非常接近这个完美的圆。  

### 为什么使用贝塞尔曲线绘制圆形？  
这个问题提得非常好。在你可以使用图形库绘制一个圆形的时候，为什么还一定要用贝塞尔曲线去绘制呢？  
答案非常简单：因为有时候你没有这样一个图形库可用。假设你在设计一款 [PostScript](http://en.wikipedia.org/wiki/PostScript_fonts) 字体，可以使用的绘图工具也仅仅是几个基本的图元：你可以绘制直线，也可以绘制曲线。在这样的情况下，贝塞尔曲线无疑是一个更合适的选择。  
<!-- more --> 
### 学习资源  
有关详细解释如何使用贝塞尔曲线拟合圆形的计算机文献真是少的可怜。在我学习计算机图形学的那些年，我仅仅看过一本与此相关的书。而且里面记录的还是一个错误的方法。  
然而，有人会说，那些商业化的绘图程序能够将 PostScript 字体以图形的形式输出，其中的细节都很完美呀。是这样的。但是出于某些原因，他们似乎不太想让别人知道他们的实现方法。  
几年前，我决定用所了解的基本几何学原理和计算机排版技术去解决这个困扰我很久的疑惑。在我解决了这个疑惑后，我把解决方法公布在了一个论坛小组里（Laserpub）。  
后来，很多人对我提供的方法表示感谢，但是知道这个方法的人似乎仅仅是那些阅读过这篇帖子的少数人。  
基于以上原因，我决定把我的解决方法发布到互联网上。  

### 分析  
让我们回顾一下圆的一些基本属性：  
在一个平面上，到一个中心点距离相等的所有点的集合称为一个圆。如果用一条经过中心点的垂线划过圆形，将会把圆形分为两个对称的半圆。用过圆心的横线同样也可以达到相同效果。  
如果同时使用上述两条线划过圆形，圆将会被分为四个部分，四个部分两两对称。  
这意味着，如果我们能找到一个方法绘制这四部分中的其中一个部分，其它部分自然迎刃而解。  
如果我们在垂线与水平线和圆周相交的地方绘制圆的切线，这些切线也是垂直或水平的。  
使用贝塞尔曲线拟合这四个象限中的任何一个，我们需要一条由一个起点、一个终点和两个控制点组成的曲线。这条曲线需要满足下面的条件：如果将起点和最近的控制点连接，终点和最近的控制点连接，将会得到两条线段——一条垂直线，一条水平线（具体取决于选取的象限）且两条线段的长度相同，都是 l 。  
  
![image](/images/blog/20130811_bezier.png)  

有无穷多条曲线拥有上述属性（至少理论上我们能找到无穷多个长度为 l 的线段可以使用）。但是没有一条能够绘制出一个完美的圆。

### 解决方法  
在引言中我就已经说到，我们不能绘制出一个完美的圆，但是拟合一个近似完美的圆是可行的。其中的要点就是找到一个合适的 l 。这个 l 是因圆而异的，与圆的半径 r 有关。这不是一个大问题。我们只需要找出 r = 1 这种特殊情况下的 l 即可。这个结果是一个常数，我们把它称为 κ （希腊单词 kyklos 的首字母）。  
只要我们找到这个 κ ，也就是当 r = 1 时对应圆的 l 值，我们就能用下面公式去获得拟合任意圆所需要的 l ：  

$$
l = r * κ
$$

### 正确的 κ 值  
使用正确的 κ 将能绘制出一条非常接近四分之一圆的曲线。如果我们使用刚刚讨论到的性质去绘制一条曲线，并且这条曲线的中心点和圆心重合，那么我们能够获得一条跟实际圆形非常近似的四分之一圆。这就是我的结论。  
我不打算去介绍正确的 κ 值复杂的推理过程，我会直接告诉你结果：  
  
$$
κ = 0.5522847498  
$$  

### 速记 1-2-3-4  
κ 是一个非常难记的无理数，幸运的是，你不需要花时间去记住它，也不用每次需要用到的时候都到这里来翻阅。κ 的计算公式非擦汗那个简单：  
<strong>口诀：负1加根号2除以3然后乘4</strong>  
  
$$
κ = 4\frac{\sqrt{2}-1}{3}  
$$

### 总结  
使用贝塞尔曲线绘制一个几乎完美的圆，需要分别绘制四条曲线，每条曲线的起点与最近的控制点构成的线段和终点与最近的控制点连接起来的线段分别是垂线和水平线。两条线段的长度是圆的半径和 κ 的乘积。  
要绘制一个椭圆的话，方法类似。不同点是你需要两条不同的半径，你需要用 κ 分别与半径相乘，得到的结果作为与该条半径平行的控制线段的长度值。如果椭圆的半径不是水平或垂直的，你需要用计算机图形学手册（特别是 Michael Mortenson 的[Geometric Transformation](http://www.amazon.com/exec/obidos/ASIN/0831130571/whizkidtechnomag)上提供的方法做旋转变换得到最终的椭圆。  


### 练习题  
如何使用贝塞尔曲线和 κ 绘制正弦曲线？  

### 源代码  
如果你需要用自己的电脑软件计算 κ ，你可以从[我的 FTP 服务器](ftp://whizkidtech.redprince.net/asm/)下载我的汇编代码。你可以用 NASM 运行它，其中包含了一个预置的用于32位 Windows 和 其它 Unix 的目标文件。其中也包含了用 stdout 输出 κ 值的简单 C 代码。我在 Windows 和 FreeBSD 下分别用 MSVC 和 GCC 编译器进行了测试。  

### 数学知识  
如果你想知道更多关于计算 κ 的数学理论，请阅读[这里](http://www.whizkidtech.redprince.net/bezier/circle/kappa)。  

### 更多资源  
更多关于圆的绘制资料，请点击[这里](http://www.tinaja.com/cubic01.html)，感谢 [Izumi Ohzawa](mailto:izumi@pinoko.berkeley.edu) 告诉我这个链接。

